# Generated by Django 5.1 on 2024-09-05 11:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("dob", models.CharField(max_length=255)),
                (
                    "usertype",
                    models.CharField(
                        choices=[("candidate", "candidate"), ("company", "comapny")],
                        default="candidate",
                        max_length=50,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="interviews",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                (
                    "interview_type",
                    models.CharField(
                        choices=[
                            ("HR Interview", "HR Interview"),
                            ("Techincal", "Technical"),
                        ],
                        default="HR Interview",
                        max_length=50,
                    ),
                ),
                (
                    "interview_mode",
                    models.CharField(
                        choices=[
                            ("Telephonic", "Telephonic"),
                            ("video call", "video call"),
                            ("Face To Face", "Face To Face"),
                        ],
                        default="Scheduled",
                        max_length=50,
                    ),
                ),
                ("interview_date", models.DateTimeField(auto_now_add=True)),
                ("interview_time", models.TimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Scheduled", "Scheduled"),
                            ("Completed", "Completed"),
                            ("Cancelled", "Cancelled"),
                            ("Rescheduled", "Rescheduled"),
                        ],
                        default="Scheduled",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("description", models.TextField()),
                (
                    "employment_type",
                    models.CharField(
                        choices=[
                            ("Full-Time", "Full-Time"),
                            ("Part-Time", "Part-Time"),
                            ("Contract", "Contract"),
                            ("Internship", "Internship"),
                        ],
                        default="Full-Time",
                        max_length=50,
                    ),
                ),
                (
                    "experience",
                    models.CharField(
                        choices=[
                            ("Fresher", "Fresher"),
                            ("1-2 Years", "1-2 Years"),
                            ("2-5 Years", "2-5 Years"),
                            ("5-10 Years", "5-10 Years"),
                            ("10+ Years", "10+ Years"),
                        ],
                        default="Fresher",
                        max_length=50,
                    ),
                ),
                ("salary", models.CharField(max_length=50)),
                ("location", models.CharField(max_length=50)),
                ("skills", models.CharField(max_length=50)),
                ("published_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "skill_id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "skill_name",
                    models.CharField(
                        choices=[
                            ("Communication Skills", "Communication Skills"),
                            ("Management Skills", "Management Skills"),
                            ("Backend Developer", "Backend Developer"),
                            ("Frontend Developer", "Frontend Developer"),
                            (".DotNet Developer", ".DotNet Developer"),
                            ("MERN-Stack Developer", "MERN-Stack Developer"),
                            ("Full-stack Developer", "Full-Stack Developer"),
                            ("Java Developer", "Java Developer"),
                            ("Python Developer", "Python Developer"),
                            (
                                "Python-Full-Stack Developer",
                                "Python-Full-Stack Developer",
                            ),
                            (" c/c++", "c/c++"),
                            ("AI/ML Developer", "AI/ML Developer"),
                            ("Data Science", "Data Science"),
                            ("Data Analyst", "Data Analyst"),
                            ("Data Engineer", "Data Engineer"),
                            ("Data Architect", "Data Architect"),
                            ("Data Administrator", "Data Administrator"),
                            ("Data Security Analyst", "Data Security Analyst"),
                            (
                                "Data Warehousing Specialist",
                                "Data Warehousing Specialist",
                            ),
                            ("Database Manager", "Database Manager"),
                            ("Database Developer", "Database Developer"),
                            ("Database Administrator", "Database Administrator"),
                            ("Database Analyst", "Database Analyst"),
                            ("Database Designer", "Database Designer"),
                            (
                                "Database Security Specialist",
                                "Database Security Specialist",
                            ),
                            ("Database Architect", "Database Architect"),
                            ("Database Coordinator", "Database Coordinator"),
                            ("Database Programmer", "Database Programmer"),
                            ("Database Modeller", "Database Modeller"),
                            ("Database Tuner", "Database Tuner"),
                            ("Database Consultant", "Database Consultant"),
                            ("Database Vendor", "Database Vendor"),
                            ("Database Specialist", "Database Specialist"),
                            ("Database Operator", "Database Operator"),
                            ("Database Administrator", "Database Administrator"),
                            ("Database Manager", "Database Manager"),
                            ("Database Developer", "Database Developer"),
                            ("Database Analyst", "Database Analyst"),
                            ("Database Designer", "Database Designer"),
                            (
                                "Database Security Specialist",
                                "Database Security Specialist",
                            ),
                            ("Database Architect", "Database Architect"),
                            ("Database Coordinator", "Database Coordinator"),
                            ("Database Programmer", "Database Programmer"),
                            ("Database Modeller", "Database Modeller"),
                            ("Database Tuner", "Database Tuner"),
                            ("Database Consultant", "Database Consultant"),
                            ("Database Vendor", "Database Vendor"),
                            ("Database Specialist", "Database Specialist"),
                            ("Database Operator", "Database Operator"),
                            ("Database Administrator", "Database Administrator"),
                            ("Database Manager", "Database Manager"),
                            ("Database Developer", "Database Developer"),
                            ("Database Analyst", "Database Analyst"),
                            ("Database Designer", "Database Designer"),
                            (
                                "Database Security Specialist",
                                "Database Security Specialist",
                            ),
                            ("Database Architect", "Database Architect"),
                            ("Database Coordinator", "Database Coordinator"),
                            ("Database Programmer", "Database Programmer"),
                            ("Database Modeller", "Database Modeller"),
                            ("Database Tuner", "Database Tuner"),
                            ("Database Consultant", "Database Consultant"),
                            ("Database Vendor", "Database Vendor"),
                            ("Database Specialist", "Database Specialist"),
                            ("Database Operator", "Database Operator"),
                            ("Database Administrator", "Database Administrator "),
                        ],
                        default="Communication Skill",
                        max_length=255,
                    ),
                ),
                ("skill_description", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "resume",
                    models.FileField(default="resume/resume.pdf", upload_to="resume/"),
                ),
                ("dob", models.DateField(auto_now_add=True)),
                ("city", models.CharField(max_length=50)),
                ("state", models.CharField(max_length=50)),
                ("phone_number", models.CharField(max_length=15)),
                (
                    "education",
                    models.CharField(
                        choices=[
                            ("Graduate", "Graduate"),
                            ("Post Graduate", "Post Graduate"),
                            ("Doctorate", "Doctorate"),
                            ("Diploma", "Diploma"),
                            ("Others", "Others"),
                        ],
                        default="Graduate",
                        max_length=50,
                    ),
                ),
                (
                    "experience",
                    models.CharField(
                        choices=[
                            ("Fresher", "Fresher"),
                            ("1-2 Years", "1-2 Years"),
                            ("2-5 Years", "2-5 Years"),
                            ("5-10 Years", "5-10 Years"),
                            ("10+ Years", "10+ Years"),
                        ],
                        default="Fresher",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("c_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=50)),
                ("mobile", models.CharField(max_length=50)),
                ("logo", models.ImageField(default="logo/logo.png", upload_to="logo/")),
                ("address", models.CharField(max_length=100)),
                ("website", models.URLField(max_length=50)),
                (
                    "industry",
                    models.CharField(
                        choices=[
                            ("Service-Based", "Service-Based"),
                            ("Product-Based", "Product-Based"),
                            ("IT-services", "IT-services"),
                            ("Others", "Others"),
                        ],
                        default="IT-services",
                        max_length=50,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("Startup", "Startup"),
                            ("Small Scale", "Small Scale"),
                            ("Medium Scale", "Medium Scale"),
                            ("Large Scale", "Large Scale"),
                        ],
                        default="Startup",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InterviewReservation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("interview_date", models.DateTimeField(auto_now_add=True)),
                ("ReservationDate", models.TimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Confirmed", "Confirmed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Scheduled",
                        max_length=50,
                    ),
                ),
                (
                    "interview_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.interviews",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InterviewsPanel",
            fields=[
                (
                    "panel_id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("interviewer_name", models.CharField(max_length=255)),
                ("scheduled_date", models.DateTimeField(auto_now_add=True)),
                ("score", models.FloatField(max_length=10)),
                ("location", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Scheduled", "Scheduled"),
                            ("Completed", "Completed"),
                            ("Cancelled", "Cancelled"),
                            ("Rescheduled", "Rescheduled"),
                        ],
                        default="Scheduled",
                        max_length=50,
                    ),
                ),
                (
                    "InterviewReservation_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.interviewreservation",
                    ),
                ),
                (
                    "interviews_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.interviews",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="interviews",
            name="interviewer_panel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="jobwebsite.interviewspanel",
            ),
        ),
        migrations.AddField(
            model_name="interviewreservation",
            name="interviewr_panel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="jobwebsite.interviewspanel",
            ),
        ),
        migrations.AddField(
            model_name="interviews",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.job"
            ),
        ),
        migrations.AddField(
            model_name="interviewreservation",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.job"
            ),
        ),
        migrations.CreateModel(
            name="jobsApplication",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Applied", "Applied"),
                            ("Shortlisted", "Shortlisted"),
                            ("Rejected", "Rejected"),
                            ("Hired", "Hired"),
                        ],
                        default="Applied",
                        max_length=50,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.job"
                    ),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.candidate",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="interviews",
            name="candidate",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.candidate"
            ),
        ),
        migrations.AddField(
            model_name="interviewreservation",
            name="candidate_name",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.candidate"
            ),
        ),
        migrations.CreateModel(
            name="CandidateSkill",
            fields=[
                (
                    "CandidateSkill_id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("proficiency_level", models.CharField(max_length=255)),
                ("experience", models.CharField(max_length=255)),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.skill",
                    ),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.candidate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CandidateEducation",
            fields=[
                (
                    "CandidateEducation_id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("Degree", models.CharField(max_length=50)),
                ("Institution", models.CharField(max_length=50)),
                ("Feild_of_study", models.CharField(max_length=50)),
                ("start_date", models.DateField(auto_now_add=True)),
                ("end_date", models.DateField(auto_now_add=True)),
                ("Grades", models.CharField(max_length=50)),
                ("Percentage", models.IntegerField()),
                ("Description", models.TextField()),
                (
                    "Candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.candidate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCompany",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("role", models.CharField(max_length=50)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("InActive", "InActive")],
                        default="Active",
                        max_length=50,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jobwebsite.company",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="job",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="jobwebsite.company"
            ),
        ),
    ]
